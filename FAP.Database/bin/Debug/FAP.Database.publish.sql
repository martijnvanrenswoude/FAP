/*
Deployment script for FAPDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "FAPDatabase"
:setvar DefaultFilePrefix "FAPDatabase"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Bank_Account]...';


GO
CREATE TABLE [dbo].[Bank_Account] (
    [account_number] INT NOT NULL,
    [employee_id]    INT NULL,
    PRIMARY KEY CLUSTERED ([account_number] ASC)
);


GO
PRINT N'Creating [dbo].[Contact]...';


GO
CREATE TABLE [dbo].[Contact] (
    [contact_id]   INT            IDENTITY (1, 1) NOT NULL,
    [customer_id]  INT            NOT NULL,
    [name]         NVARCHAR (MAX) NULL,
    [surname]      NVARCHAR (MAX) NULL,
    [telephone_nr] INT            NULL,
    [email]        NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([contact_id] ASC, [customer_id] ASC),
    UNIQUE NONCLUSTERED ([contact_id] ASC)
);


GO
PRINT N'Creating [dbo].[Customer]...';


GO
CREATE TABLE [dbo].[Customer] (
    [id]           INT            IDENTITY (1, 1) NOT NULL,
    [name]         NVARCHAR (MAX) NULL,
    [telephone_nr] INT            NULL,
    [postcode]     NVARCHAR (6)   NULL,
    [house number] NVARCHAR (10)  NULL,
    [email]        NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Department]...';


GO
CREATE TABLE [dbo].[Department] (
    [id]          INT            IDENTITY (1, 1) NOT NULL,
    [name]        NVARCHAR (MAX) NULL,
    [description] NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Employee]...';


GO
CREATE TABLE [dbo].[Employee] (
    [id]            INT            NOT NULL,
    [department_id] INT            NULL,
    [name]          NVARCHAR (MAX) NULL,
    [surname]       NVARCHAR (MAX) NULL,
    [acces level]   INT            NULL,
    [position]      NVARCHAR (MAX) NULL,
    [postcode]      NVARCHAR (6)   NULL,
    [house number]  NVARCHAR (10)  NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Event]...';


GO
CREATE TABLE [dbo].[Event] (
    [Id]              INT            NOT NULL,
    [contact_id]      INT            NOT NULL,
    [name]            NVARCHAR (MAX) NULL,
    [date]            NVARCHAR (MAX) NULL,
    [amount_visitors] INT            NULL,
    [surface area_m2] INT            NULL,
    [description]     NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ID]...';


GO
CREATE TABLE [dbo].[ID] (
    [Id] INT IDENTITY (1, 1) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Inlogdata]...';


GO
CREATE TABLE [dbo].[Inlogdata] (
    [Id]       INT           NOT NULL,
    [username] NVARCHAR (50) NULL,
    [password] NVARCHAR (24) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Inspector]...';


GO
CREATE TABLE [dbo].[Inspector] (
    [Id]           INT            NOT NULL,
    [name]         NVARCHAR (MAX) NULL,
    [surname]      NVARCHAR (MAX) NULL,
    [telephone_nr] INT            NULL,
    [postcode]     NVARCHAR (6)   NULL,
    [house number] NVARCHAR (5)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Inspector_shedule]...';


GO
CREATE TABLE [dbo].[Inspector_shedule] (
    [inspector_id]    INT      NOT NULL,
    [date]            DATE     NULL,
    [available_from]  DATETIME NULL,
    [available_until] DATETIME NULL,
    PRIMARY KEY CLUSTERED ([inspector_id] ASC)
);


GO
PRINT N'Creating [dbo].[Invoice]...';


GO
CREATE TABLE [dbo].[Invoice] (
    [id]             INT             IDENTITY (1, 1) NOT NULL,
    [employee_id]    INT             NULL,
    [quotation_id]   INT             NULL,
    [payment_status] INT             NULL,
    [sum]            DECIMAL (18, 2) NULL,
    [deadline]       DATETIME        NULL,
    [date]           DATE            NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Payment_status]...';


GO
CREATE TABLE [dbo].[Payment_status] (
    [id]          INT            IDENTITY (1, 1) NOT NULL,
    [name]        NVARCHAR (MAX) NULL,
    [descriptiom] NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Plan_inspector]...';


GO
CREATE TABLE [dbo].[Plan_inspector] (
    [plan_id]      INT NOT NULL,
    [inspector_id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([plan_id] ASC, [inspector_id] ASC)
);


GO
PRINT N'Creating [dbo].[Planning]...';


GO
CREATE TABLE [dbo].[Planning] (
    [id]               INT      IDENTITY (1, 1) NOT NULL,
    [customer_id]      INT      NULL,
    [event_id]         INT      NULL,
    [questionnaire_id] INT      NULL,
    [start_date]       DATETIME NULL,
    [employee_id]      INT      NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Question]...';


GO
CREATE TABLE [dbo].[Question] (
    [Id]               INT            IDENTITY (1, 1) NOT NULL,
    [questionnaire_id] INT            NOT NULL,
    [question]         NVARCHAR (MAX) NULL,
    [answer]           NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Questionnaire]...';


GO
CREATE TABLE [dbo].[Questionnaire] (
    [Id] INT IDENTITY (1, 1) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Quotation]...';


GO
CREATE TABLE [dbo].[Quotation] (
    [id]          INT             NOT NULL,
    [plan_id]     INT             NULL,
    [customer_id] INT             NULL,
    [employee_id] INT             NULL,
    [event_id]    INT             NULL,
    [sum]         DECIMAL (18, 2) NULL,
    [deadline]    DATETIME        NULL,
    [date]        DATE            NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[StandardQuestion]...';


GO
CREATE TABLE [dbo].[StandardQuestion] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [question] NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[StandardQuestionsList]...';


GO
CREATE TABLE [dbo].[StandardQuestionsList] (
    [standardquestion_id] INT            NOT NULL,
    [questionnaire_id]    INT            NOT NULL,
    [answer]              NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([standardquestion_id] ASC, [questionnaire_id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Bank_Account]...';


GO
ALTER TABLE [dbo].[Bank_Account]
    ADD FOREIGN KEY ([employee_id]) REFERENCES [dbo].[ID] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Contact]...';


GO
ALTER TABLE [dbo].[Contact]
    ADD FOREIGN KEY ([customer_id]) REFERENCES [dbo].[Customer] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Employee]...';


GO
ALTER TABLE [dbo].[Employee]
    ADD FOREIGN KEY ([id]) REFERENCES [dbo].[ID] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Employee]...';


GO
ALTER TABLE [dbo].[Employee]
    ADD FOREIGN KEY ([department_id]) REFERENCES [dbo].[Department] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Event]...';


GO
ALTER TABLE [dbo].[Event]
    ADD FOREIGN KEY ([contact_id]) REFERENCES [dbo].[Contact] ([contact_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Inlogdata]...';


GO
ALTER TABLE [dbo].[Inlogdata]
    ADD FOREIGN KEY ([Id]) REFERENCES [dbo].[ID] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Inspector]...';


GO
ALTER TABLE [dbo].[Inspector]
    ADD FOREIGN KEY ([Id]) REFERENCES [dbo].[ID] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Inspector_shedule]...';


GO
ALTER TABLE [dbo].[Inspector_shedule]
    ADD FOREIGN KEY ([inspector_id]) REFERENCES [dbo].[Inspector] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Invoice]...';


GO
ALTER TABLE [dbo].[Invoice]
    ADD FOREIGN KEY ([employee_id]) REFERENCES [dbo].[Employee] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Invoice]...';


GO
ALTER TABLE [dbo].[Invoice]
    ADD FOREIGN KEY ([quotation_id]) REFERENCES [dbo].[Quotation] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Invoice]...';


GO
ALTER TABLE [dbo].[Invoice]
    ADD FOREIGN KEY ([payment_status]) REFERENCES [dbo].[Payment_status] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Plan_inspector]...';


GO
ALTER TABLE [dbo].[Plan_inspector]
    ADD FOREIGN KEY ([plan_id]) REFERENCES [dbo].[Planning] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Plan_inspector]...';


GO
ALTER TABLE [dbo].[Plan_inspector]
    ADD FOREIGN KEY ([inspector_id]) REFERENCES [dbo].[Inspector] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Planning]...';


GO
ALTER TABLE [dbo].[Planning]
    ADD FOREIGN KEY ([customer_id]) REFERENCES [dbo].[Customer] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Planning]...';


GO
ALTER TABLE [dbo].[Planning]
    ADD FOREIGN KEY ([employee_id]) REFERENCES [dbo].[Employee] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Planning]...';


GO
ALTER TABLE [dbo].[Planning]
    ADD FOREIGN KEY ([questionnaire_id]) REFERENCES [dbo].[Questionnaire] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Planning]...';


GO
ALTER TABLE [dbo].[Planning]
    ADD FOREIGN KEY ([event_id]) REFERENCES [dbo].[Event] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Question]...';


GO
ALTER TABLE [dbo].[Question]
    ADD FOREIGN KEY ([questionnaire_id]) REFERENCES [dbo].[Questionnaire] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Quotation]...';


GO
ALTER TABLE [dbo].[Quotation]
    ADD FOREIGN KEY ([plan_id]) REFERENCES [dbo].[Planning] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Quotation]...';


GO
ALTER TABLE [dbo].[Quotation]
    ADD FOREIGN KEY ([customer_id]) REFERENCES [dbo].[Customer] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Quotation]...';


GO
ALTER TABLE [dbo].[Quotation]
    ADD FOREIGN KEY ([employee_id]) REFERENCES [dbo].[Employee] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Quotation]...';


GO
ALTER TABLE [dbo].[Quotation]
    ADD FOREIGN KEY ([event_id]) REFERENCES [dbo].[Event] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[StandardQuestionsList]...';


GO
ALTER TABLE [dbo].[StandardQuestionsList]
    ADD FOREIGN KEY ([standardquestion_id]) REFERENCES [dbo].[StandardQuestion] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[StandardQuestionsList]...';


GO
ALTER TABLE [dbo].[StandardQuestionsList]
    ADD FOREIGN KEY ([questionnaire_id]) REFERENCES [dbo].[Questionnaire] ([Id]);


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
