/*
Deployment script for FAPDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "FAPDb"
:setvar DefaultFilePrefix "FAPDb"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Contact]...';


GO
ALTER TABLE [dbo].[Contact] DROP CONSTRAINT [FK__Contact__custome__5BE2A6F2];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Event]...';


GO
ALTER TABLE [dbo].[Event] DROP CONSTRAINT [FK__Event__contact_i__5EBF139D];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Planning]...';


GO
ALTER TABLE [dbo].[Planning] DROP CONSTRAINT [FK__Planning__custom__6754599E];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Quotation]...';


GO
ALTER TABLE [dbo].[Quotation] DROP CONSTRAINT [FK__Quotation__custo__6D0D32F4];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Employee]...';


GO
ALTER TABLE [dbo].[Employee] DROP CONSTRAINT [FK__Employee__depart__5DCAEF64];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Bank_Account]...';


GO
ALTER TABLE [dbo].[Bank_Account] DROP CONSTRAINT [FK__Bank_Acco__emplo__5AEE82B9];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Employee]...';


GO
ALTER TABLE [dbo].[Employee] DROP CONSTRAINT [FK__Employee__id__5CD6CB2B];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Inlogdata]...';


GO
ALTER TABLE [dbo].[Inlogdata] DROP CONSTRAINT [FK__Inlogdata__Id__5FB337D6];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Inspector]...';


GO
ALTER TABLE [dbo].[Inspector] DROP CONSTRAINT [FK__Inspector__Id__60A75C0F];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Invoice]...';


GO
ALTER TABLE [dbo].[Invoice] DROP CONSTRAINT [FK__Invoice__employe__628FA481];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Invoice]...';


GO
ALTER TABLE [dbo].[Invoice] DROP CONSTRAINT [FK__Invoice__quotati__6383C8BA];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Invoice]...';


GO
ALTER TABLE [dbo].[Invoice] DROP CONSTRAINT [FK__Invoice__payment__6477ECF3];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Plan_inspector]...';


GO
ALTER TABLE [dbo].[Plan_inspector] DROP CONSTRAINT [FK__Plan_insp__plan___656C112C];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Planning]...';


GO
ALTER TABLE [dbo].[Planning] DROP CONSTRAINT [FK__Planning__employ__68487DD7];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Planning]...';


GO
ALTER TABLE [dbo].[Planning] DROP CONSTRAINT [FK__Planning__questi__693CA210];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Planning]...';


GO
ALTER TABLE [dbo].[Planning] DROP CONSTRAINT [FK__Planning__event___6A30C649];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Quotation]...';


GO
ALTER TABLE [dbo].[Quotation] DROP CONSTRAINT [FK__Quotation__plan___6C190EBB];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Question]...';


GO
ALTER TABLE [dbo].[Question] DROP CONSTRAINT [FK__Question__questi__6B24EA82];


GO
PRINT N'Dropping unnamed constraint on [dbo].[StandardQuestionsList]...';


GO
ALTER TABLE [dbo].[StandardQuestionsList] DROP CONSTRAINT [FK__StandardQ__quest__70DDC3D8];


GO
PRINT N'Dropping unnamed constraint on [dbo].[StandardQuestionsList]...';


GO
ALTER TABLE [dbo].[StandardQuestionsList] DROP CONSTRAINT [FK__StandardQ__stand__6FE99F9F];


GO
PRINT N'Starting rebuilding table [dbo].[Contact]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Contact] (
    [contact_id]   INT            IDENTITY (1, 1) NOT NULL,
    [customer_id]  INT            NOT NULL,
    [name]         NVARCHAR (MAX) NULL,
    [surname]      NVARCHAR (MAX) NULL,
    [telephone_nr] INT            NULL,
    [email]        NVARCHAR (MAX) NULL,
    UNIQUE NONCLUSTERED ([contact_id] ASC),
    PRIMARY KEY CLUSTERED ([contact_id] ASC, [customer_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Contact])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Contact] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Contact] ([contact_id], [customer_id], [name], [surname], [telephone_nr], [email])
        SELECT   [contact_id],
                 [customer_id],
                 [name],
                 [surname],
                 [telephone_nr],
                 [email]
        FROM     [dbo].[Contact]
        ORDER BY [contact_id] ASC, [customer_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Contact] OFF;
    END

DROP TABLE [dbo].[Contact];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Contact]', N'Contact';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Customer]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Customer] (
    [id]           INT            IDENTITY (1, 1) NOT NULL,
    [name]         NVARCHAR (MAX) NULL,
    [telephone_nr] INT            NULL,
    [postcode]     NVARCHAR (6)   NULL,
    [house number] NVARCHAR (10)  NULL,
    [email]        NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Customer])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Customer] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Customer] ([id], [name], [telephone_nr], [postcode], [house number], [email])
        SELECT   [id],
                 [name],
                 [telephone_nr],
                 [postcode],
                 [house number],
                 [email]
        FROM     [dbo].[Customer]
        ORDER BY [id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Customer] OFF;
    END

DROP TABLE [dbo].[Customer];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Customer]', N'Customer';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Department]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Department] (
    [id]          INT            IDENTITY (1, 1) NOT NULL,
    [name]        NVARCHAR (MAX) NULL,
    [description] NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Department])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Department] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Department] ([id], [name], [description])
        SELECT   [id],
                 [name],
                 [description]
        FROM     [dbo].[Department]
        ORDER BY [id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Department] OFF;
    END

DROP TABLE [dbo].[Department];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Department]', N'Department';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ID]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ID] (
    [Id] INT IDENTITY (1, 1) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ID])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ID] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ID] ([Id])
        SELECT   [Id]
        FROM     [dbo].[ID]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ID] OFF;
    END

DROP TABLE [dbo].[ID];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ID]', N'ID';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Invoice]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Invoice] (
    [id]             INT             IDENTITY (1, 1) NOT NULL,
    [employee_id]    INT             NULL,
    [quotation_id]   INT             NULL,
    [payment_status] INT             NULL,
    [sum]            DECIMAL (18, 2) NULL,
    [deadline]       DATETIME        NULL,
    [date]           DATE            NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Invoice])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Invoice] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Invoice] ([id], [employee_id], [quotation_id], [payment_status], [sum], [deadline], [date])
        SELECT   [id],
                 [employee_id],
                 [quotation_id],
                 [payment_status],
                 [sum],
                 [deadline],
                 [date]
        FROM     [dbo].[Invoice]
        ORDER BY [id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Invoice] OFF;
    END

DROP TABLE [dbo].[Invoice];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Invoice]', N'Invoice';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Payment_status]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Payment_status] (
    [id]          INT            IDENTITY (1, 1) NOT NULL,
    [name]        NVARCHAR (MAX) NULL,
    [descriptiom] NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Payment_status])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Payment_status] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Payment_status] ([id], [name], [descriptiom])
        SELECT   [id],
                 [name],
                 [descriptiom]
        FROM     [dbo].[Payment_status]
        ORDER BY [id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Payment_status] OFF;
    END

DROP TABLE [dbo].[Payment_status];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Payment_status]', N'Payment_status';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Planning]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Planning] (
    [id]               INT      IDENTITY (1, 1) NOT NULL,
    [customer_id]      INT      NULL,
    [event_id]         INT      NULL,
    [questionnaire_id] INT      NULL,
    [start_date]       DATETIME NULL,
    [employee_id]      INT      NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Planning])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Planning] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Planning] ([id], [customer_id], [event_id], [questionnaire_id], [start_date], [employee_id])
        SELECT   [id],
                 [customer_id],
                 [event_id],
                 [questionnaire_id],
                 [start_date],
                 [employee_id]
        FROM     [dbo].[Planning]
        ORDER BY [id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Planning] OFF;
    END

DROP TABLE [dbo].[Planning];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Planning]', N'Planning';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Question]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Question] (
    [Id]               INT            IDENTITY (1, 1) NOT NULL,
    [questionnaire_id] INT            NOT NULL,
    [question]         NVARCHAR (MAX) NULL,
    [answer]           NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Question])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Question] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Question] ([Id], [questionnaire_id], [question], [answer])
        SELECT   [Id],
                 [questionnaire_id],
                 [question],
                 [answer]
        FROM     [dbo].[Question]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Question] OFF;
    END

DROP TABLE [dbo].[Question];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Question]', N'Question';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Questionnaire]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Questionnaire] (
    [Id] INT IDENTITY (1, 1) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Questionnaire])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Questionnaire] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Questionnaire] ([Id])
        SELECT   [Id]
        FROM     [dbo].[Questionnaire]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Questionnaire] OFF;
    END

DROP TABLE [dbo].[Questionnaire];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Questionnaire]', N'Questionnaire';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[StandardQuestion]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_StandardQuestion] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [question] NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[StandardQuestion])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_StandardQuestion] ON;
        INSERT INTO [dbo].[tmp_ms_xx_StandardQuestion] ([Id], [question])
        SELECT   [Id],
                 [question]
        FROM     [dbo].[StandardQuestion]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_StandardQuestion] OFF;
    END

DROP TABLE [dbo].[StandardQuestion];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_StandardQuestion]', N'StandardQuestion';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating unnamed constraint on [dbo].[Contact]...';


GO
ALTER TABLE [dbo].[Contact] WITH NOCHECK
    ADD FOREIGN KEY ([customer_id]) REFERENCES [dbo].[Customer] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Event]...';


GO
ALTER TABLE [dbo].[Event] WITH NOCHECK
    ADD FOREIGN KEY ([contact_id]) REFERENCES [dbo].[Contact] ([contact_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Planning]...';


GO
ALTER TABLE [dbo].[Planning] WITH NOCHECK
    ADD FOREIGN KEY ([customer_id]) REFERENCES [dbo].[Customer] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Quotation]...';


GO
ALTER TABLE [dbo].[Quotation] WITH NOCHECK
    ADD FOREIGN KEY ([customer_id]) REFERENCES [dbo].[Customer] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Employee]...';


GO
ALTER TABLE [dbo].[Employee] WITH NOCHECK
    ADD FOREIGN KEY ([department_id]) REFERENCES [dbo].[Department] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Bank_Account]...';


GO
ALTER TABLE [dbo].[Bank_Account] WITH NOCHECK
    ADD FOREIGN KEY ([employee_id]) REFERENCES [dbo].[ID] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Employee]...';


GO
ALTER TABLE [dbo].[Employee] WITH NOCHECK
    ADD FOREIGN KEY ([id]) REFERENCES [dbo].[ID] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Inlogdata]...';


GO
ALTER TABLE [dbo].[Inlogdata] WITH NOCHECK
    ADD FOREIGN KEY ([Id]) REFERENCES [dbo].[ID] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Inspector]...';


GO
ALTER TABLE [dbo].[Inspector] WITH NOCHECK
    ADD FOREIGN KEY ([Id]) REFERENCES [dbo].[ID] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Invoice]...';


GO
ALTER TABLE [dbo].[Invoice] WITH NOCHECK
    ADD FOREIGN KEY ([employee_id]) REFERENCES [dbo].[Employee] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Invoice]...';


GO
ALTER TABLE [dbo].[Invoice] WITH NOCHECK
    ADD FOREIGN KEY ([quotation_id]) REFERENCES [dbo].[Quotation] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Invoice]...';


GO
ALTER TABLE [dbo].[Invoice] WITH NOCHECK
    ADD FOREIGN KEY ([payment_status]) REFERENCES [dbo].[Payment_status] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Plan_inspector]...';


GO
ALTER TABLE [dbo].[Plan_inspector] WITH NOCHECK
    ADD FOREIGN KEY ([plan_id]) REFERENCES [dbo].[Planning] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Planning]...';


GO
ALTER TABLE [dbo].[Planning] WITH NOCHECK
    ADD FOREIGN KEY ([employee_id]) REFERENCES [dbo].[Employee] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Planning]...';


GO
ALTER TABLE [dbo].[Planning] WITH NOCHECK
    ADD FOREIGN KEY ([questionnaire_id]) REFERENCES [dbo].[Questionnaire] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Planning]...';


GO
ALTER TABLE [dbo].[Planning] WITH NOCHECK
    ADD FOREIGN KEY ([event_id]) REFERENCES [dbo].[Event] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Quotation]...';


GO
ALTER TABLE [dbo].[Quotation] WITH NOCHECK
    ADD FOREIGN KEY ([plan_id]) REFERENCES [dbo].[Planning] ([id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Question]...';


GO
ALTER TABLE [dbo].[Question] WITH NOCHECK
    ADD FOREIGN KEY ([questionnaire_id]) REFERENCES [dbo].[Questionnaire] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[StandardQuestionsList]...';


GO
ALTER TABLE [dbo].[StandardQuestionsList] WITH NOCHECK
    ADD FOREIGN KEY ([questionnaire_id]) REFERENCES [dbo].[Questionnaire] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[StandardQuestionsList]...';


GO
ALTER TABLE [dbo].[StandardQuestionsList] WITH NOCHECK
    ADD FOREIGN KEY ([standardquestion_id]) REFERENCES [dbo].[StandardQuestion] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Contact'), OBJECT_ID(N'dbo.Event'), OBJECT_ID(N'dbo.Planning'), OBJECT_ID(N'dbo.Quotation'), OBJECT_ID(N'dbo.Employee'), OBJECT_ID(N'dbo.Bank_Account'), OBJECT_ID(N'dbo.Inlogdata'), OBJECT_ID(N'dbo.Inspector'), OBJECT_ID(N'dbo.Invoice'), OBJECT_ID(N'dbo.Plan_inspector'), OBJECT_ID(N'dbo.Question'), OBJECT_ID(N'dbo.StandardQuestionsList'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
